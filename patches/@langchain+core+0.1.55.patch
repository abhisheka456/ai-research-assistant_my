diff --git a/node_modules/@langchain/core/dist/output_parsers/json.js b/node_modules/@langchain/core/dist/output_parsers/json.js
index 29dc413..3991aeb 100644
--- a/node_modules/@langchain/core/dist/output_parsers/json.js
+++ b/node_modules/@langchain/core/dist/output_parsers/json.js
@@ -46,7 +46,7 @@ export class JsonOutputParser extends BaseCumulativeTransformOutputParser {
 export function parseJsonMarkdown(s, parser = parsePartialJson) {
     // eslint-disable-next-line no-param-reassign
     s = s.trim();
-    const match = /```(json)?(.*)```/s.exec(s);
+    const match = /```(json)?([\s\S]*?)```/.exec(s);
     if (!match) {
         return parser(s);
     }
diff --git a/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js b/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js
index 0c74749..76341ea 100644
--- a/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js
+++ b/node_modules/@langchain/core/dist/utils/@cfworker/json-schema/src/dereference.js
@@ -65,8 +65,10 @@ typeof self !== "undefined" &&
     self.location &&
     self.location.origin !== "null"
     ? //@ts-ignore
-        /* #__PURE__ */ new URL(self.location.origin + self.location.pathname + location.search)
-    : /* #__PURE__ */ new URL("https://github.com/cfworker");
+      /* #__PURE__ */ { href: self.location.origin + self.location.pathname + location.search }
+    : /* #__PURE__ */ { href: "https://github.com/cfworker" };
+    //     /* #__PURE__ */ new URL(self.location.origin + self.location.pathname + location.search)
+    // : /* #__PURE__ */ new URL("https://github.com/cfworker");
 export function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = "") {
     if (schema && typeof schema === "object" && !Array.isArray(schema)) {
         const id = schema.$id || schema.id;
diff --git a/node_modules/@langchain/core/dist/utils/stream.js b/node_modules/@langchain/core/dist/utils/stream.js
index 92bb73c..b4c69d2 100644
--- a/node_modules/@langchain/core/dist/utils/stream.js
+++ b/node_modules/@langchain/core/dist/utils/stream.js
@@ -1,3 +1,5 @@
+class ReadableStream {}
+
 /*
  * Support async iterator syntax for ReadableStreams in all environments.
  * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490
